<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="Moonzy">

  <!-- Define inertial property macros  -->
  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia_with_origin" params="m r h *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Define materials -->
  <material name="violet">
    <color rgba="${238/255} ${130/255} ${238/255} 1"/>
  </material>

  <material name="plum">
    <color rgba="${221/255} ${160/255} ${221/255} 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>

  <!-- Define properties -->
  <xacro:property name="stomach_radius" value="0.2"/>
  <xacro:property name="stomach_mass" value="35"/>

  <xacro:property name="leg_radius" value="0.05"/>
  <xacro:property name="leg_length" value="0.2"/>
  <xacro:property name="leg_mass" value="1"/>

  <xacro:property name="wheel_radius" value="0.07"/>
  <xacro:property name="wheel_mass" value="0.2"/>

  <xacro:property name="arm_radius" value="0.035"/>
  <xacro:property name="arm_length" value="0.2"/>
  <xacro:property name="arm_mass" value="0.8"/>
  <xacro:property name="arm_offset" value="0.05"/>

  <xacro:property name="paw_radius" value="0.04"/>
  <xacro:property name="paw_mass" value="0.1"/>

  <xacro:property name="neck_radius" value="0.15"/>
  <xacro:property name="neck_length" value="0.08"/>
  <xacro:property name="neck_mass" value="1.5"/>

  <xacro:property name="head_radius" value="0.15"/>
  <xacro:property name="head_mass" value="3"/>

  <xacro:property name="ear_radius" value="0.045"/>
  <xacro:property name="ear_length" value="0.1"/>
  <xacro:property name="ear_mass" value="0.5"/>

  <xacro:property name="lower_ear_y_offset" value="0.1"/>
  <xacro:property name="upper_ear_y_offset" value="0.08"/>

  <xacro:property name="lower_ear_z_offset" value="0.05"/>
  <xacro:property name="upper_ear_z_offset" value="0.1"/>

  <xacro:property name="lower_ear_angle" value="5"/>
  <xacro:property name="upper_ear_angle" value="45"/>

  <xacro:property name="ear_tip_radius" value="0.045"/>
  <xacro:property name="ear_tip_mass" value="0.5"/>

  <!-- Some plugins for gazebo -->
    <gazebo>
        <plugin
            filename="gz-sim-joint-state-publisher-system"
            name="gz::sim::systems::JointStatePublisher">
        </plugin>

        <plugin
            filename="gz-sim-diff-drive-system"
            name="gz::sim::systems::DiffDrive">
            <left_joint>left_wheel_joint</left_joint>
            <right_joint>right_wheel_joint</right_joint>
            <child_frame_id>Moonzy/base_link</child_frame_id>
            <wheel_separation>${stomach_radius}</wheel_separation>
            <wheel_radius>${wheel_radius}</wheel_radius>
            <odom_publish_frequency>10</odom_publish_frequency>
        </plugin>
    </gazebo>

  <!-- Define all the links and joints -->
  <!-- Define base_link -->
  <link name="base_link">
  </link>

  <link name="stomach">
    <visual>
      <geometry>
        <sphere radius="${stomach_radius}"/>
      </geometry>
      <material name="plum"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${stomach_radius}"/>
      </geometry>
    </collision>
    <xacro:sphere_inertia m="${stomach_mass}" r="${stomach_radius}"/>
  </link>

  <joint name="stomach_to_base" type="fixed">
    <parent link="base_link"/>
    <child link="stomach"/>
    <origin xyz="0 0 ${stomach_radius}"/>
  </joint>

  <!-- Define right and left legs -->
  <xacro:macro name="leg" params="prefix reflect">

    <link name="${prefix}_leg">
      <visual>
        <origin xyz="0 0 ${leg_length / 2}"/>
        <geometry>
          <cylinder length="${leg_length}" radius="${leg_radius}"/>
        </geometry>
        <material name="violet"/>
      </visual>
      <collision>
        <origin xyz="0 0 ${leg_length / 2}"/>
        <geometry>
          <cylinder length="${leg_length}" radius="${leg_radius}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia_with_origin m="${leg_mass}" r="${leg_radius}" h="${leg_length}">
        <origin xyz="0 0 ${leg_length / 2}"/>
      </xacro:cylinder_inertia_with_origin>
    </link>

    <joint name="stomach_to_${prefix}_leg" type="revolute">
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="${-pi / 4}" upper="${pi / 2}" velocity="0.5"/>
      <parent link="stomach"/>
      <child link="${prefix}_leg"/>
      <origin xyz="${stomach_radius / 2} ${reflect * stomach_radius / 2} ${-stomach_radius / 2}" rpy="0 ${pi / 2} 0"/>
    </joint>

  </xacro:macro>

  <xacro:leg prefix="right" reflect="-1"/>
  <xacro:leg prefix="left" reflect="1"/>

  <!-- Define right and left wheels -->
  <xacro:macro name="wheel" params="prefix">

    <link name="${prefix}_wheel">
      <visual>
        <geometry>
          <sphere radius="${wheel_radius}"/>
        </geometry>
        <material name="white"/>
      </visual>
      <collision>
        <geometry>
          <sphere radius="${wheel_radius}"/>
        </geometry>
      </collision>
      <xacro:sphere_inertia m="${wheel_mass}" r="${wheel_radius}"/>
    </link>

    <joint name="${prefix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0"/>
      <parent link="${prefix}_leg"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="0 0 ${leg_length}"/>
    </joint>

  </xacro:macro>

  <xacro:wheel prefix="right"/>
  <xacro:wheel prefix="left"/>

  <!-- Define right and left arms -->
  <xacro:macro name="arm_with_paw" params="prefix reflect">

    <link name="${prefix}_arm">
      <visual>
        <origin xyz="0 0 ${-reflect * arm_length / 2}"/>
        <geometry>
          <cylinder length="${arm_length}" radius="${arm_radius}"/>
        </geometry>
        <material name="plum"/>
      </visual>
      <collision>
        <origin xyz="0 0 ${-reflect * arm_length / 2}"/>
        <geometry>
          <cylinder length="${arm_length}" radius="${arm_radius}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia_with_origin m="${arm_mass}" r="${arm_radius}" h="${arm_length}">
        <origin xyz="0 0 ${-reflect * arm_length / 2}"/>
      </xacro:cylinder_inertia_with_origin>
    </link>

    <joint name="${prefix}_arm_joint" type="revolute">
      <axis xyz="1 0 0"/>
      <limit effort="1000.0" lower="${-pi / 4}" upper="${pi / 4}" velocity="0.5"/>
      <parent link="stomach"/>
      <child link="${prefix}_arm"/>
      <origin xyz="0 ${reflect * (arm_length - arm_offset)} ${arm_offset}" rpy="${pi / 2} 0 0"/>
    </joint>

    <link name="${prefix}_paw">
      <visual>
        <geometry>
          <sphere radius="${paw_radius}"/>
        </geometry>
        <material name="white"/>
      </visual>
      <collision>
        <geometry>
          <sphere radius="${paw_radius}"/>
        </geometry>
      </collision>
      <xacro:sphere_inertia m="${paw_mass}" r="${paw_radius}"/>
    </link>

    <joint name="${prefix}_paw_joint" type="fixed">
      <parent link="${prefix}_arm"/>
      <child link="${prefix}_paw"/>
      <origin xyz="0 0 ${-reflect * arm_length}"/>
    </joint>

  </xacro:macro>

  <xacro:arm_with_paw prefix="right" reflect="-1"/>
  <xacro:arm_with_paw prefix="left" reflect="1"/>

  <!-- Define neck -->
  <link name="neck">
    <visual>
      <geometry>
        <cylinder length="${neck_length}" radius="${neck_radius}"/>
      </geometry>
      <material name="plum"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="${neck_length}" radius="${neck_radius}"/>
      </geometry>
    </collision>
    <xacro:cylinder_inertia m="${neck_mass}" r="${neck_radius}" h="${neck_length}"/>
  </link>

  <joint name="neck_joint" type="fixed">
    <parent link="stomach"/>
    <child link="neck"/>
    <origin xyz="0 0 ${stomach_radius}"/>
  </joint>

  <!-- Define head -->
  <link name="head">
    <visual>
      <geometry>
        <sphere radius="${head_radius}"/>
      </geometry>
      <material name="plum"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="${head_radius}"/>
      </geometry>
    </collision>
    <xacro:sphere_inertia m="${head_mass}" r="${head_radius}"/>
  </link>

  <joint name="head_swivel" type="revolute">
    <parent link="neck"/>
    <child link="head"/>
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="${-pi / 2}" upper="${pi / 2}" velocity="0.5"/>
    <origin xyz="0 0 ${neck_radius}"/>
  </joint>

  <!-- Define four ears -->
  <xacro:macro name="ear" params="prefix suffix reflect angle y_offset z_offset">

    <link name="${prefix}_${suffix}_ear">
      <visual>
        <origin xyz="0 0 ${-reflect * ear_length / 2}"/>
        <geometry>
          <cylinder length="${ear_length}" radius="${ear_radius}"/>
        </geometry>
        <material name="violet"/>
      </visual>
      <collision>
        <origin xyz="0 0 ${-reflect * ear_length / 2}"/>
        <geometry>
          <cylinder length="${ear_length}" radius="${ear_radius}"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia_with_origin m="${ear_mass}" r="${ear_radius}" h="${ear_length}">
        <origin xyz="0 0 ${-reflect * ear_length / 2}"/>
      </xacro:cylinder_inertia_with_origin>
    </link>

    <joint name="${prefix}_${suffix}_ear_joint" type="revolute">
      <axis xyz="1 0 0"/>
      <limit effort="1000.0" lower="${-pi / 180 * 3}" upper="${pi / 180 * 3}" velocity="0.5"/>
      <parent link="head"/>
      <child link="${prefix}_${suffix}_ear"/>
      <origin xyz="0 ${reflect * y_offset} ${z_offset}" rpy="${pi / 180 * (90 + reflect * angle)} 0 0"/>
    </joint>

    <link name="${prefix}_${suffix}_ear_tip">
      <visual>
        <geometry>
          <sphere radius="${ear_tip_radius}"/>
        </geometry>
        <material name="violet"/>
      </visual>
      <collision>
        <geometry>
          <sphere radius="${ear_tip_radius}"/>
        </geometry>
      </collision>
      <xacro:sphere_inertia m="${ear_tip_mass}" r="${ear_tip_radius}"/>
    </link>

    <joint name="${prefix}_${suffix}_ear_tip_joint" type="fixed">
      <parent link="${prefix}_${suffix}_ear"/>
      <child link="${prefix}_${suffix}_ear_tip"/>
      <origin xyz="0 0 ${-reflect * ear_length}"/>
    </joint>

  </xacro:macro>

  <xacro:ear prefix="right" suffix="lower" reflect="-1" angle="${lower_ear_angle}" y_offset="${lower_ear_y_offset}" z_offset="${lower_ear_z_offset}"/>
  <xacro:ear prefix="right" suffix="upper" reflect="-1" angle="${upper_ear_angle}" y_offset="${upper_ear_y_offset}" z_offset="${upper_ear_z_offset}"/>
  <xacro:ear prefix="left" suffix="lower" reflect="1" angle="${lower_ear_angle}" y_offset="${lower_ear_y_offset}" z_offset="${lower_ear_z_offset}"/>
  <xacro:ear prefix="left" suffix="upper" reflect="1" angle="${upper_ear_angle}" y_offset="${upper_ear_y_offset}" z_offset="${upper_ear_z_offset}"/>

</robot>
